{"version":3,"sources":["components/DayMenu.js","components/SingleForecast.js","components/SpecificForecast.js","components/BasicInfo.js","App.js","index.js"],"names":["DayMenu","props","className","data-toggle","data-target","onClick","onToggle","toggle","id","type","switch","switchTomorrow","switch3days","SingleForecast","time","description","temp","feelsTemp","press","wind","humidity","SpecificForecast","displayWeather","forecast","map","day","key","slideOne","slice","slideTwo","slideThree","style","padding","margin","color","borderRadius","backgroundColor","city","data-ride","href","role","data-slide","aria-hidden","hide","BasicInfo","hours","sunset","sunrise","hoursFull","Math","floor","minutes","today","Date","toLocaleDateString","toLocaleTimeString","backgroundPosition","backgroundImage","img","onChange","citySelector","placeholder","changeInfo","opacity","paddingTop","border","backgroundRepeat","hour","APIKey","App","state","data","displayForecast","cityImg","toggleMenu","forecastNum","onClickToggle","setState","imgSelector","getBasicInfo","API","fetch","then","response","ok","Error","json","sys","catch","err","console","log","getWeather","list","array","length","filter","x","i","arrForecast","elem","dt_txt","main","feels_like","pressure","speed","weather","display48hForecast","display24hForecast","getCurrentTime","getCurrentDay","getDay","e","target","value","onChangeInfo","display96hForecast","displayToday","displayTomorrow","onClickHide","this","setInterval","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdfed2ca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./DayMenu.css\";\r\nconst DayMenu = props => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <div\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#menu\"\r\n        className=\"toggleMenu\"\r\n        onClick={() => props.onToggle()}\r\n      >\r\n        <p>{props.toggle ? \"Ukryj menu\" : \"Pokaż menu\"}</p>\r\n      </div>\r\n      <div className=\"dropdown\">\r\n        <div className=\"collapse\" id=\"menu\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light top\"\r\n            onClick={() => props.switch()}\r\n          >\r\n            Pokaż prognozę na 24 godziny (pomiary co 3 godziny)\r\n          </button>\r\n          <br></br>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light top\"\r\n            onClick={() => props.switchTomorrow()}\r\n          >\r\n            Pokaż prognozę na 48 godzin (pomiary co 6 godzin)\r\n          </button>\r\n          <br></br>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light top\"\r\n            onClick={props.switch3days}\r\n          >\r\n            Pokaż prognozę na 96 godzin (pomiary co 12 godzin)\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayMenu;\r\n","import React from \"react\";\r\n\r\nconst SingleForecast = props => {\r\n  return (\r\n    <div className=\"single-forecast\">\r\n      <h4>{props.time}</h4>\r\n      <p>\r\n        <b>{props.description}</b>\r\n      </p>\r\n      <div className=\"forecast-info\">\r\n        <p>\r\n          Temperatura(odczuwalna): {props.temp}({props.feelsTemp})&#176;C\r\n        </p>\r\n        <p>Ciśnienie: {props.press} hPa</p>\r\n        <p>Wiatr: {props.wind} m/s</p>\r\n        <p>Wilgotność: {props.humidity}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleForecast;\r\n","import React from \"react\";\r\nimport SingleForecast from \"./SingleForecast\";\r\nconst SpecificForecast = props => {\r\n  const forecast = [props.forecast];\r\n  const displayWeather = forecast[0].map(day => {\r\n    return (\r\n      <SingleForecast\r\n        key={day.time}\r\n        temp={day.temp}\r\n        time={day.time}\r\n        feelsTemp={day.feelsTemp}\r\n        press={day.press}\r\n        humidity={day.humidity}\r\n        wind={day.wind}\r\n        description={day.description}\r\n      />\r\n    );\r\n  });\r\n  // return displayWeather;\r\n  const slideOne = displayWeather.slice(0, 3);\r\n  const slideTwo = displayWeather.slice(3, 6);\r\n  const slideThree = displayWeather.slice(6, 9);\r\n\r\n  return (\r\n    <div className=\"forecast-header\">\r\n      <h2\r\n        style={{\r\n          padding: \"10px\",\r\n          margin: \"20px 25%\",\r\n          color: \"white\",\r\n          borderRadius: \"14px\",\r\n          backgroundColor: \"rgba(0, 139, 139, 0.650)\"\r\n        }}\r\n      >\r\n        Prognoza pogody w mieście {props.city}\r\n      </h2>\r\n      <div\r\n        id=\"carouselForecast\"\r\n        className=\"carousel slide\"\r\n        data-ride=\"carousel\"\r\n      >\r\n        <div className=\"carousel-inner\">\r\n          <div className=\"carousel-item active\">{slideOne}</div>\r\n          <div className=\"carousel-item\">{slideTwo}</div>\r\n          <div className=\"carousel-item\">{slideThree}</div>\r\n        </div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselForecast\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselForecast\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n      <button className=\"btn btn-dark hide\" onClick={props.hide}>\r\n        Ukryj\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecificForecast;\r\n","import React from \"react\";\r\n\r\nconst BasicInfo = props => {\r\n  const hours = (props.sunset - props.sunrise) / 3600;\r\n  const hoursFull = Math.floor((props.sunset - props.sunrise) / 3600);\r\n  const minutes = Math.floor((hours - hoursFull) * 60);\r\n  const today = new Date().toLocaleDateString();\r\n  const sunrise = new Date(props.sunrise * 1000).toLocaleTimeString();\r\n  const sunset = new Date(props.sunset * 1000).toLocaleTimeString();\r\n\r\n  return (\r\n    <div\r\n      className=\"info\"\r\n      style={{\r\n        backgroundPosition: \"center\",\r\n        padding: \"25px\",\r\n        color: \"white\",\r\n        backgroundImage: `url(${props.img})`\r\n      }}\r\n    >\r\n      <h3>{props.city}</h3>\r\n      <div className=\"citySelect\">\r\n        <select\r\n          className=\"form-control\"\r\n          onChange={props.citySelector}\r\n          placeholder=\"Zmień miasto...\"\r\n        >\r\n          <option>Kraków</option>\r\n          <option>Warszawa</option>\r\n          <option>Jasło</option>\r\n          <option>Rzeszów</option>\r\n          <option>Gdańsk</option>\r\n          <option>Poznań</option>\r\n          <option>Wrocław</option>\r\n          <option>Lublin</option>\r\n        </select>\r\n        <br></br>\r\n        <button\r\n          onClick={props.changeInfo}\r\n          className=\"btn btn-info\"\r\n          style={{ opacity: \"0.86\" }}\r\n        >\r\n          Aktualizuj\r\n        </button>\r\n        <br></br>\r\n      </div>\r\n\r\n      <br></br>\r\n      <div\r\n        style={{\r\n          opacity: \"0.9\",\r\n          paddingTop: \"10px\",\r\n          border: \"2px solid white\",\r\n          borderRadius: \"7px\",\r\n          backgroundColor: \"rgb(0, 139,139, 0.75)\",\r\n          backgroundRepeat: \"no-repeat\"\r\n        }}\r\n      >\r\n        <p>Dzisiaj jest: {props.day}</p>\r\n        <p>{today}</p>\r\n        <p>Aktualnie jest godzina: {props.hour}</p>\r\n        <p>Wschód słońca: {sunrise}</p>\r\n        <p>Zachód słońca: {sunset}</p>\r\n        <p>\r\n          Długość dnia: {hoursFull} godzin i {minutes} minut.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport DayMenu from \"./components/DayMenu\";\nimport { setInterval } from \"timers\";\nimport SpecificForecast from \"./components/SpecificForecast\";\nimport BasicInfo from \"./components/BasicInfo\";\n//klucz\nconst APIKey = \"efa2ef11f117f7485b2fca8e87a3a2f5\";\nclass App extends React.Component {\n  state = {\n    data: new Date(),\n    hour: null,\n    day: null,\n    displayForecast: false,\n    sunrise: 0,\n    sunset: 0,\n    cityImg: \"\",\n    toggleMenu: false,\n    city: \"Kraków\",\n    forecast: null,\n    forecastNum: 0\n  };\n  onClickToggle = () => {\n    this.setState({ toggleMenu: !this.state.toggleMenu });\n  };\n  imgSelector = () => {\n    switch (this.state.city) {\n      case \"Kraków\":\n        this.setState({\n          cityImg:\n            \"https://aparthotelmiodowa.pl/wp-content/uploads/2018/10/shutterstock_image-15.jpg\"\n        });\n        break;\n      case \"Jasło\":\n        this.setState({\n          cityImg: \"http://www.rafaljak.phg.pl/obrazy/Ratusz_min.JPG\"\n        });\n        break;\n      case \"Warszawa\":\n        this.setState({\n          cityImg:\n            \"https://www.synevo.pl/wp-content/uploads/2018/08/laboratorium-warszawa.jpg\"\n        });\n        break;\n      case \"Rzeszów\":\n        this.setState({\n          cityImg:\n            \"https://ocdn.eu/pulscms-transforms/1/Y1Nk9kpTURBXy9mNWI3ZjRhNWVmNGI1YzYyNzA4ZGZhYThkZGYzNDgwMC5qcGeTlQMAUs0PIM0IgpMFzQMUzQG8kwmmMmU1YjRmBoGhMAE/pomnik-czynu-rewolucyjnego-w-rzeszowie-fot-franciszek-mazur-agencja-gazeta.jpg\"\n        });\n        break;\n      case \"Gdańsk\":\n        this.setState({\n          cityImg:\n            \"https://www.tyszkiewicz.pl/blog/wp-content/uploads/2017/10/Fotolia_119236654_S-e1507295734666.jpg\"\n        });\n        break;\n      case \"Poznań\":\n        this.setState({\n          cityImg:\n            \"https://fotoportal.poznan.pl/images/4bcbcc8f-f055-49af-86ba-8fc8dc20832c/home-section-2.jpg\"\n        });\n        break;\n      case \"Wrocław\":\n        this.setState({\n          cityImg:\n            \"https://kochamwroclaw.pl/wp-content/uploads/12ec4c8478d2d658d94da5fe27c68d89.jpg\"\n        });\n        break;\n      case \"Lublin\":\n        this.setState({\n          cityImg:\n            \"https://podroze.smcloud.net/t/image/t/123536/image/IMG-8940_1097909.jpg\"\n        });\n        break;\n      default:\n        this.setState({\n          cityImg:\n            \"https://www.xda-developers.com/files/2018/05/android-weather-apps.png\"\n        });\n    }\n  };\n  getBasicInfo = () => {\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=${APIKey}&units=metric&lang=pl`;\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"Nie udało się\");\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  getWeather = () => {\n    const API = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},PL&appid=${APIKey}&units=metric&lang=pl`;\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"Nie udało się pobrać danych!\");\n      })\n      .then(response => response.json())\n      .then(data => {\n        //funkcja która iteruje odpowiednią ilość(ustalaną w zależności od wybranej opcji) elementów tablicy. Objęte elementy będą wrzucane do tablicy i wyświtlane na stronie.\n        const forecast = data.list.slice(0, this.state.forecastNum);\n        let array = [];\n        if (forecast.length === 9) {\n          array = forecast;\n        } else if (forecast.length === 17) {\n          array = forecast.filter((x, i) => i % 2 === 0);\n        } else if (forecast.length === 33) {\n          array = forecast.filter((x, i) => i % 4 === 0);\n        }\n        const arrForecast = array.map(elem => {\n          return {\n            time: elem.dt_txt,\n            temp: elem.main.temp,\n            feelsTemp: elem.main.feels_like,\n            press: elem.main.pressure,\n            humidity: elem.main.humidity,\n            wind: elem.wind.speed,\n            description: elem.weather[0].description\n          };\n        });\n        this.setState({\n          forecast: arrForecast\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  display48hForecast = () => {\n    this.imgSelector();\n\n    this.getWeather();\n\n    this.setState({\n      displayForecast: true,\n      forecastNum: 17\n    });\n  };\n\n  display24hForecast = () => {\n    this.imgSelector();\n    this.getWeather();\n    this.setState({\n      displayForecast: true,\n      forecastNum: 9\n    });\n  };\n\n  getCurrentTime = () => {\n    this.setState({\n      hour: new Date().toLocaleTimeString()\n    });\n  };\n  getCurrentDay = () => {\n    const days = [\n      \"Niedziela\",\n      \"Poniedzialek\",\n      \"Wtorek\",\n      \"Środa\",\n      \"Czwartek\",\n      \"Piątek\",\n      \"Sobota\"\n    ];\n    const day = this.state.data.getDay();\n    this.setState({\n      day: days[day]\n    });\n  };\n  componentDidMount() {\n    this.getCurrentDay();\n    setInterval(this.getCurrentTime, 1000);\n    this.getWeather();\n    this.getBasicInfo();\n\n    this.imgSelector();\n  }\n\n  citySelector = e => {\n    this.setState({\n      city: e.target.value,\n\n      displayForecast: false\n    });\n  };\n  onChangeInfo = () => {\n    this.getBasicInfo();\n    this.getWeather();\n    this.imgSelector();\n  };\n  display96hForecast = () => {\n    this.getWeather();\n    this.setState({\n      displayForecast: true,\n      displayToday: false,\n      displayTomorrow: false,\n      forecastNum: 33\n    });\n  };\n  onClickHide = () => {\n    this.setState({\n      displayForecast: false\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"top-Name\">\n          <h1>Aplikacja z prognozą pogody</h1>\n        </div>\n\n        <BasicInfo\n          changeInfo={this.onChangeInfo}\n          citySelector={this.citySelector}\n          city={this.state.city}\n          day={this.state.day}\n          hour={this.state.hour}\n          sunset={this.state.sunset}\n          sunrise={this.state.sunrise}\n          img={this.state.cityImg}\n        />\n        <DayMenu\n          switch={this.display24hForecast}\n          switchTomorrow={this.display48hForecast}\n          switch3days={this.display96hForecast}\n          toggle={this.state.toggleMenu}\n          onToggle={this.onClickToggle}\n        />\n\n        {this.state.displayForecast ? (\n          <SpecificForecast\n            forecast={this.state.forecast}\n            city={this.state.city}\n            hide={this.onClickHide}\n          />\n        ) : null}\n        {!this.state.displayForecast ? (\n          <div className=\"alert alert-info alert\">\n            Wybierz jedną z opcji z powyższego menu\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}