{"version":3,"sources":["assets/galaxy.jpg","assets/forest1.jpg","components/DayMenu.js","components/SingleForecast.js","components/SpecificForecast.js","components/BasicInfo.js","App.js","index.js"],"names":["module","exports","DayMenu","props","className","data-toggle","data-target","onClick","onToggle","toggle","id","type","switch","switchTomorrow","switch3days","dispInfo","SingleForecast","time","description","temp","press","wind","humidity","SpecificForecast","displayWeather","forecast","map","day","key","feelsTemp","slideOne","slice","slideTwo","slideThree","hide","class","data-ride","data-interval","href","role","data-slide","aria-hidden","BasicInfo","hours","sunset","sunrise","hoursFull","Math","floor","minutes","today","Date","toLocaleDateString","toLocaleTimeString","city","onChange","citySelector","changeInfo","hour","APIKey","App","state","data","displayForecast","toggleMenu","forecastNum","onClickToggle","setState","getBasicInfo","API","fetch","then","response","ok","Error","json","sys","catch","err","console","log","getWeather","list","array","length","filter","x","i","arrForecast","elem","dt_txt","main","feels_like","pressure","speed","weather","display96hForecast","displayToday","displayTomorrow","display48hForecast","display24hForecast","getCurrentTime","getCurrentDay","getDay","e","target","value","onChangeInfo","onClickHide","this","setInterval","src","galaxy","alt","viewBox","preserveAspectRatio","fill","xmlns","d","width","height","patternContentUnits","forest","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f5f73ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/galaxy.75e1c508.jpg\";","module.exports = __webpack_public_path__ + \"static/media/forest1.c57c8aaf.jpg\";","import React from \"react\";\r\nconst DayMenu = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"menu\">\r\n        <div\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#menu\"\r\n          className=\"toggleMenu\"\r\n          onClick={() => props.onToggle()}\r\n        >\r\n          <p>{props.toggle ? \"Ukryj menu\" : \"Pokaż opcje prognozy\"}</p>\r\n        </div>\r\n        <div className=\"dropdown\">\r\n          <div className=\"collapse\" id=\"menu\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-dark top\"\r\n              onClick={() => props.switch()}\r\n            >\r\n              24h co 3 godziny\r\n            </button>\r\n            <br></br>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-dark top\"\r\n              onClick={() => props.switchTomorrow()}\r\n            >\r\n              48h co 6 godzin\r\n            </button>\r\n            <br></br>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-dark top\"\r\n              onClick={props.switch3days}\r\n            >\r\n              96h co 12 godzin\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!props.dispInfo ? (\r\n        <div className=\"alert alert-primary alert\">\r\n          Wybierz jedną z opcji z menu\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayMenu;\r\n","import React from \"react\";\r\n\r\nconst SingleForecast = props => {\r\n  return (\r\n    <div className=\"single-forecast\">\r\n      <h4>{props.time}</h4>\r\n      <p>\r\n        <b>{props.description}</b>\r\n      </p>\r\n      <div className=\"forecast-info\">\r\n        <p className=\"temperature\">{props.temp}&#176;C</p>\r\n        <p className=\"pressure\">{props.press} hPa</p>\r\n        <p>Wiatr: {props.wind} m/s</p>\r\n        <p>Wilgotność: {props.humidity}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleForecast;\r\n","import React from \"react\";\r\nimport SingleForecast from \"./SingleForecast\";\r\nconst SpecificForecast = (props) => {\r\n  const forecast = [props.forecast];\r\n  const displayWeather = forecast[0].map((day) => {\r\n    return (\r\n      <SingleForecast\r\n        key={day.time}\r\n        temp={day.temp}\r\n        time={day.time}\r\n        feelsTemp={day.feelsTemp}\r\n        press={day.press}\r\n        humidity={day.humidity}\r\n        wind={day.wind}\r\n        description={day.description}\r\n      />\r\n    );\r\n  });\r\n  const slideOne = displayWeather.slice(0, 3);\r\n  const slideTwo = displayWeather.slice(3, 6);\r\n  const slideThree = displayWeather.slice(6, 9);\r\n\r\n  return (\r\n    <div className=\"forecast\">\r\n      <div className=\"close\" onClick={props.hide}>\r\n        <i class=\"fas fa-times-circle\"></i>\r\n      </div>\r\n      <div\r\n        id=\"carouselForecast\"\r\n        className=\"carousel slide\"\r\n        data-ride=\"carousel\"\r\n        data-interval=\"4000\"\r\n      >\r\n        <div className=\"carousel-inner\">\r\n          <div className=\"carousel-item active\" id=\"first\">\r\n            {slideOne}\r\n          </div>\r\n          <div className=\"carousel-item\">{slideTwo}</div>\r\n          <div className=\"carousel-item\">{slideThree}</div>\r\n        </div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselForecast\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselForecast\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n      <button className=\"btn btn-secondary hide\" onClick={props.hide}>\r\n        Ukryj\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecificForecast;\r\n","import React from \"react\";\r\n\r\nconst BasicInfo = (props) => {\r\n  const hours = (props.sunset - props.sunrise) / 3600;\r\n  const hoursFull = Math.floor((props.sunset - props.sunrise) / 3600);\r\n  const minutes = Math.floor((hours - hoursFull) * 60);\r\n  const today = new Date().toLocaleDateString();\r\n  const sunrise = new Date(props.sunrise * 1000).toLocaleTimeString();\r\n  const sunset = new Date(props.sunset * 1000).toLocaleTimeString();\r\n\r\n  return (\r\n    <div className=\"info\">\r\n      <h1>{props.city}</h1>\r\n      <div className=\"citySelect\">\r\n        <select\r\n          className=\"form-control\"\r\n          onChange={props.citySelector}\r\n          onClick={props.changeInfo}\r\n        >\r\n          <option>Kraków</option>\r\n          <option>Warszawa</option>\r\n          <option>Jasło</option>\r\n          <option>Rzeszów</option>\r\n          <option>Gdańsk</option>\r\n          <option>Poznań</option>\r\n          <option>Wrocław</option>\r\n          <option>Lublin</option>\r\n        </select>\r\n        <br></br>\r\n      </div>\r\n      <div className=\"basicInfo\">\r\n        <p className=\"basicInfo__day\">{props.day}</p>\r\n        <p className=\"basicInfo__clock\"> {props.hour}</p>\r\n        <p>{today}</p>\r\n        <p>Wschód słońca: {sunrise}</p>\r\n        <p>Zachód słońca: {sunset}</p>\r\n        <p>\r\n          Długość dnia: {hoursFull} godzin i {minutes} minut.\r\n        </p>\r\n      </div>\r\n      <div className=\"slide-down\">\r\n        <p className=\"arrow\">></p>\r\n        <p>Przewiń</p>\r\n        <p className=\"arrow\">></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import React from \"react\";\r\nimport \"./css/style.css\";\r\nimport DayMenu from \"./components/DayMenu\";\r\nimport { setInterval } from \"timers\";\r\nimport SpecificForecast from \"./components/SpecificForecast\";\r\nimport BasicInfo from \"./components/BasicInfo\";\r\nimport galaxy from \"./assets/galaxy.jpg\";\r\nimport forest from \"./assets/forest1.jpg\";\r\n//key\r\nconst APIKey = \"efa2ef11f117f7485b2fca8e87a3a2f5\";\r\nclass App extends React.Component {\r\n  state = {\r\n    data: new Date(),\r\n    hour: null,\r\n    day: null,\r\n    displayForecast: false,\r\n    sunrise: 0,\r\n    sunset: 0,\r\n    toggleMenu: false,\r\n    city: \"Kraków\",\r\n    forecast: null,\r\n    forecastNum: 0,\r\n  };\r\n  //toggle menu\r\n  onClickToggle = () => {\r\n    this.setState({ toggleMenu: !this.state.toggleMenu });\r\n  };\r\n  //get basic info (day, date, sunrise, sunset)\r\n  getBasicInfo = () => {\r\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=${APIKey}&units=metric&lang=pl`;\r\n\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Nie udało się\");\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //get forecast\r\n  getWeather = () => {\r\n    const API = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},PL&appid=${APIKey}&units=metric&lang=pl`;\r\n\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Nie udało się pobrać danych!\");\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //iterate certain number of array elements in order to display them in the forecast.\r\n        const forecast = data.list.slice(0, this.state.forecastNum);\r\n        let array = [];\r\n        if (forecast.length === 9) {\r\n          array = forecast;\r\n        } else if (forecast.length === 17) {\r\n          array = forecast.filter((x, i) => i % 2 === 0);\r\n        } else if (forecast.length === 33) {\r\n          array = forecast.filter((x, i) => i % 4 === 0);\r\n        }\r\n        const arrForecast = array.map((elem) => {\r\n          return {\r\n            time: elem.dt_txt,\r\n            temp: elem.main.temp,\r\n            feelsTemp: elem.main.feels_like,\r\n            press: elem.main.pressure,\r\n            humidity: elem.main.humidity,\r\n            wind: elem.wind.speed,\r\n            description: elem.weather[0].description,\r\n          };\r\n        });\r\n        this.setState({\r\n          forecast: arrForecast,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  display96hForecast = () => {\r\n    this.getWeather();\r\n    this.setState({\r\n      displayForecast: true,\r\n      displayToday: false,\r\n      displayTomorrow: false,\r\n      forecastNum: 33,\r\n    });\r\n  };\r\n\r\n  display48hForecast = () => {\r\n    this.getWeather();\r\n\r\n    this.setState({\r\n      displayForecast: true,\r\n      forecastNum: 17,\r\n    });\r\n  };\r\n\r\n  display24hForecast = () => {\r\n    this.getWeather();\r\n    this.setState({\r\n      displayForecast: true,\r\n      forecastNum: 9,\r\n    });\r\n  };\r\n\r\n  getCurrentTime = () => {\r\n    this.setState({\r\n      hour: new Date().toLocaleTimeString(),\r\n    });\r\n  };\r\n\r\n  getCurrentDay = () => {\r\n    const days = [\r\n      \"Niedziela\",\r\n      \"Poniedziałek\",\r\n      \"Wtorek\",\r\n      \"Środa\",\r\n      \"Czwartek\",\r\n      \"Piątek\",\r\n      \"Sobota\",\r\n    ];\r\n    const day = this.state.data.getDay();\r\n    this.setState({\r\n      day: days[day],\r\n    });\r\n  };\r\n\r\n  citySelector = (e) => {\r\n    this.setState({\r\n      city: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeInfo = () => {\r\n    this.getBasicInfo();\r\n    this.getWeather();\r\n  };\r\n\r\n  onClickHide = () => {\r\n    this.setState({\r\n      displayForecast: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCurrentDay();\r\n    setInterval(this.getCurrentTime, 1000);\r\n    this.getWeather();\r\n    this.getBasicInfo();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"background\">\r\n          <div className=\"imgContainer\">\r\n            <img id=\"backgroundImg\" src={galaxy} alt=\"galaxy\" />\r\n          </div>\r\n          <svg\r\n            viewBox=\"0 0 1920 1080\"\r\n            preserveAspectRatio=\"xMidYMid slice\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              id=\"Polygon1\"\r\n              d=\"M980.848 0H1920V1080H980.848V823H1131.5H1380L980.848 142L572.5 823H808.5H980.848V1080H0V0H980.848Z\"\r\n              fill=\"url(#pattern1)\"\r\n            />\r\n            <defs>\r\n              <clipPath id=\"clip0\">\r\n                <rect width=\"1920\" height=\"1080\" fill=\"white\" />\r\n              </clipPath>\r\n              <pattern\r\n                id=\"pattern1\"\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                patternContentUnits=\"objectBoundingBox\"\r\n              >\r\n                <image\r\n                  height=\"1\"\r\n                  width=\"1\"\r\n                  preserveAspectRatio=\"none\"\r\n                  href={forest}\r\n                />\r\n              </pattern>\r\n            </defs>\r\n          </svg>\r\n        </div>\r\n        <div className=\"App\">\r\n          <div className=\"header\">\r\n            <p>Prognoza pogody</p>\r\n          </div>\r\n\r\n          <BasicInfo\r\n            changeInfo={this.onChangeInfo}\r\n            citySelector={this.citySelector}\r\n            city={this.state.city}\r\n            day={this.state.day}\r\n            hour={this.state.hour}\r\n            sunset={this.state.sunset}\r\n            sunrise={this.state.sunrise}\r\n          />\r\n          <DayMenu\r\n            switch={this.display24hForecast}\r\n            switchTomorrow={this.display48hForecast}\r\n            switch3days={this.display96hForecast}\r\n            toggle={this.state.toggleMenu}\r\n            onToggle={this.onClickToggle}\r\n            dispInfo={this.state.displayForecast}\r\n          />\r\n\r\n          {this.state.displayForecast ? (\r\n            <SpecificForecast\r\n              forecast={this.state.forecast}\r\n              city={this.state.city}\r\n              hide={this.onClickHide}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}