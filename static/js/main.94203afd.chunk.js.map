{"version":3,"sources":["components/DayMenu.js","components/SingleForecast.js","components/SpecificForecast.js","components/BasicInfo.js","App.js","index.js","assets/cinegraph.mp4"],"names":["DayMenu","props","className","data-toggle","data-target","onClick","onToggle","toggle","id","type","switch","switchTomorrow","switch3days","dispInfo","SingleForecast","time","description","temp","press","wind","humidity","SpecificForecast","displayWeather","forecast","map","day","key","feelsTemp","slideOne","slice","slideTwo","slideThree","data-ride","href","role","data-slide","aria-hidden","hide","BasicInfo","hours","sunset","sunrise","hoursFull","Math","floor","minutes","today","Date","toLocaleDateString","toLocaleTimeString","city","onChange","citySelector","changeInfo","hour","APIKey","App","state","data","displayForecast","toggleMenu","forecastNum","onClickToggle","setState","getBasicInfo","API","fetch","then","response","ok","Error","json","sys","catch","err","console","log","getWeather","list","array","length","filter","x","i","arrForecast","elem","dt_txt","main","feels_like","pressure","speed","weather","display96hForecast","displayToday","displayTomorrow","display48hForecast","display24hForecast","getCurrentTime","getCurrentDay","getDay","e","target","value","onChangeInfo","onClickHide","this","setInterval","autoPlay","loop","muted","src","video","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.94203afd.chunk.js","sourcesContent":["import React from \"react\";\r\nconst DayMenu = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"menu\">\r\n        <div\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#menu\"\r\n          className=\"toggleMenu\"\r\n          onClick={() => props.onToggle()}\r\n        >\r\n          <p>{props.toggle ? \"Ukryj menu\" : \"Pokaż menu\"}</p>\r\n        </div>\r\n        <div className=\"dropdown\">\r\n          <div className=\"collapse\" id=\"menu\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light top\"\r\n              onClick={() => props.switch()}\r\n            >\r\n              Prognoza na 24 godziny (co 3 godziny)\r\n            </button>\r\n            <br></br>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light top\"\r\n              onClick={() => props.switchTomorrow()}\r\n            >\r\n              Prognoza na 48 godzin (co 6 godzin)\r\n            </button>\r\n            <br></br>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light top\"\r\n              onClick={props.switch3days}\r\n            >\r\n              Prognoza na 96 godzin (co 12 godzin)\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!props.dispInfo ? (\r\n        <div className=\"alert alert-primary alert\">\r\n          Wybierz jedną z opcji z powyższego menu\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayMenu;\r\n","import React from \"react\";\r\n\r\nconst SingleForecast = props => {\r\n  return (\r\n    <div className=\"single-forecast\">\r\n      <h4>{props.time}</h4>\r\n      <p>\r\n        <b>{props.description}</b>\r\n      </p>\r\n      <div className=\"forecast-info\">\r\n        <p className=\"temperature\">{props.temp}&#176;C</p>\r\n        <p className=\"pressure\">{props.press} hPa</p>\r\n        <p>Wiatr: {props.wind} m/s</p>\r\n        <p>Wilgotność: {props.humidity}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleForecast;\r\n","import React from \"react\";\r\nimport SingleForecast from \"./SingleForecast\";\r\nconst SpecificForecast = props => {\r\n  const forecast = [props.forecast];\r\n  const displayWeather = forecast[0].map(day => {\r\n    return (\r\n      <SingleForecast\r\n        key={day.time}\r\n        temp={day.temp}\r\n        time={day.time}\r\n        feelsTemp={day.feelsTemp}\r\n        press={day.press}\r\n        humidity={day.humidity}\r\n        wind={day.wind}\r\n        description={day.description}\r\n      />\r\n    );\r\n  });\r\n  const slideOne = displayWeather.slice(0, 3);\r\n  const slideTwo = displayWeather.slice(3, 6);\r\n  const slideThree = displayWeather.slice(6, 9);\r\n\r\n  return (\r\n    <div className=\"forecast-header\">\r\n      <div\r\n        id=\"carouselForecast\"\r\n        className=\"carousel slide\"\r\n        data-ride=\"carousel\"\r\n      >\r\n        <div className=\"carousel-inner\">\r\n          <div className=\"carousel-item active\">{slideOne}</div>\r\n          <div className=\"carousel-item\">{slideTwo}</div>\r\n          <div className=\"carousel-item\">{slideThree}</div>\r\n        </div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselForecast\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselForecast\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n      <button className=\"btn btn-secondary hide\" onClick={props.hide}>\r\n        Ukryj\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecificForecast;\r\n","import React from \"react\";\r\n\r\nconst BasicInfo = props => {\r\n  const hours = (props.sunset - props.sunrise) / 3600;\r\n  const hoursFull = Math.floor((props.sunset - props.sunrise) / 3600);\r\n  const minutes = Math.floor((hours - hoursFull) * 60);\r\n  const today = new Date().toLocaleDateString();\r\n  const sunrise = new Date(props.sunrise * 1000).toLocaleTimeString();\r\n  const sunset = new Date(props.sunset * 1000).toLocaleTimeString();\r\n\r\n  return (\r\n    <div className=\"info\">\r\n      <h1>{props.city}</h1>\r\n      <div className=\"citySelect\">\r\n        <select\r\n          className=\"form-control\"\r\n          onChange={props.citySelector}\r\n          onClick={props.changeInfo}\r\n        >\r\n          <option>Kraków</option>\r\n          <option>Warszawa</option>\r\n          <option>Jasło</option>\r\n          <option>Rzeszów</option>\r\n          <option>Gdańsk</option>\r\n          <option>Poznań</option>\r\n          <option>Wrocław</option>\r\n          <option>Lublin</option>\r\n        </select>\r\n        <br></br>\r\n      </div>\r\n      <div className=\"basicInfo\">\r\n        <p className=\"basicInfo__day\">{props.day}</p>\r\n        <p className=\"basicInfo__clock\"> {props.hour}</p>\r\n        <p>{today}</p>\r\n        <p>Wschód słońca: {sunrise}</p>\r\n        <p>Zachód słońca: {sunset}</p>\r\n        <p>\r\n          Długość dnia: {hoursFull} godzin i {minutes} minut.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import React from \"react\";\r\nimport \"./css/style.css\";\r\nimport DayMenu from \"./components/DayMenu\";\r\nimport { setInterval } from \"timers\";\r\nimport SpecificForecast from \"./components/SpecificForecast\";\r\nimport BasicInfo from \"./components/BasicInfo\";\r\nimport video from \"./assets/cinegraph.mp4\";\r\n//klucz\r\nconst APIKey = \"efa2ef11f117f7485b2fca8e87a3a2f5\";\r\nclass App extends React.Component {\r\n  state = {\r\n    data: new Date(),\r\n    hour: null,\r\n    day: null,\r\n    displayForecast: false,\r\n    sunrise: 0,\r\n    sunset: 0,\r\n    toggleMenu: false,\r\n    city: \"Kraków\",\r\n    forecast: null,\r\n    forecastNum: 0\r\n  };\r\n  //toggle menu\r\n  onClickToggle = () => {\r\n    this.setState({ toggleMenu: !this.state.toggleMenu });\r\n  };\r\n  //get basic info (day, date, sunrise, sunset)\r\n  getBasicInfo = () => {\r\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=${APIKey}&units=metric&lang=pl`;\r\n\r\n    fetch(API)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Nie udało się\");\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //get forecast\r\n  getWeather = () => {\r\n    const API = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},PL&appid=${APIKey}&units=metric&lang=pl`;\r\n\r\n    fetch(API)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Nie udało się pobrać danych!\");\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //funkcja która iteruje odpowiednią ilość(ustalaną w zależności od wybranej opcji) elementów tablicy. Objęte elementy będą wrzucane do tablicy i wyświtlane na stronie.\r\n        const forecast = data.list.slice(0, this.state.forecastNum);\r\n        let array = [];\r\n        if (forecast.length === 9) {\r\n          array = forecast;\r\n        } else if (forecast.length === 17) {\r\n          array = forecast.filter((x, i) => i % 2 === 0);\r\n        } else if (forecast.length === 33) {\r\n          array = forecast.filter((x, i) => i % 4 === 0);\r\n        }\r\n        const arrForecast = array.map(elem => {\r\n          return {\r\n            time: elem.dt_txt,\r\n            temp: elem.main.temp,\r\n            feelsTemp: elem.main.feels_like,\r\n            press: elem.main.pressure,\r\n            humidity: elem.main.humidity,\r\n            wind: elem.wind.speed,\r\n            description: elem.weather[0].description\r\n          };\r\n        });\r\n        this.setState({\r\n          forecast: arrForecast\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  display96hForecast = () => {\r\n    this.getWeather();\r\n    this.setState({\r\n      displayForecast: true,\r\n      displayToday: false,\r\n      displayTomorrow: false,\r\n      forecastNum: 33\r\n    });\r\n  };\r\n\r\n  display48hForecast = () => {\r\n    this.getWeather();\r\n\r\n    this.setState({\r\n      displayForecast: true,\r\n      forecastNum: 17\r\n    });\r\n  };\r\n\r\n  display24hForecast = () => {\r\n    this.getWeather();\r\n    this.setState({\r\n      displayForecast: true,\r\n      forecastNum: 9\r\n    });\r\n  };\r\n\r\n  getCurrentTime = () => {\r\n    this.setState({\r\n      hour: new Date().toLocaleTimeString()\r\n    });\r\n  };\r\n\r\n  getCurrentDay = () => {\r\n    const days = [\r\n      \"Niedziela\",\r\n      \"Poniedzialek\",\r\n      \"Wtorek\",\r\n      \"Środa\",\r\n      \"Czwartek\",\r\n      \"Piątek\",\r\n      \"Sobota\"\r\n    ];\r\n    const day = this.state.data.getDay();\r\n    this.setState({\r\n      day: days[day]\r\n    });\r\n  };\r\n\r\n  citySelector = e => {\r\n    this.setState({\r\n      city: e.target.value\r\n    });\r\n  };\r\n\r\n  onChangeInfo = () => {\r\n    this.getBasicInfo();\r\n    this.getWeather();\r\n  };\r\n\r\n  onClickHide = () => {\r\n    this.setState({\r\n      displayForecast: false\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCurrentDay();\r\n    setInterval(this.getCurrentTime, 1000);\r\n    this.getWeather();\r\n    this.getBasicInfo();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <video autoPlay=\"autoplay\" loop=\"loop\" muted className=\"video\">\r\n          <source src={video} type=\"video/mp4\"></source>\r\n        </video>\r\n        <div className=\"App\">\r\n          <div className=\"header\">\r\n            <p>Prognoza pogody</p>\r\n          </div>\r\n\r\n          <BasicInfo\r\n            changeInfo={this.onChangeInfo}\r\n            citySelector={this.citySelector}\r\n            city={this.state.city}\r\n            day={this.state.day}\r\n            hour={this.state.hour}\r\n            sunset={this.state.sunset}\r\n            sunrise={this.state.sunrise}\r\n          />\r\n          <DayMenu\r\n            switch={this.display24hForecast}\r\n            switchTomorrow={this.display48hForecast}\r\n            switch3days={this.display96hForecast}\r\n            toggle={this.state.toggleMenu}\r\n            onToggle={this.onClickToggle}\r\n            dispInfo={this.state.displayForecast}\r\n          />\r\n\r\n          {this.state.displayForecast ? (\r\n            <SpecificForecast\r\n              forecast={this.state.forecast}\r\n              city={this.state.city}\r\n              hide={this.onClickHide}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n","module.exports = __webpack_public_path__ + \"static/media/cinegraph.a06942b9.mp4\";"],"sourceRoot":""}